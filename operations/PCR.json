{"name":"PCR","category":"Cloning","deployed":false,"on_the_fly":false,"field_types":[{"role":"input","name":"Forward Primer","sample_types":["Primer"],"object_types":["Primer Aliquot"],"part":false,"array":false},{"role":"input","name":"Reverse Primer","sample_types":["Primer"],"object_types":["Primer Aliquot"],"part":false,"array":false},{"role":"input","name":"Template","sample_types":["Plasmid","Fragment"],"object_types":["Plasmid Stock","Fragment Stock"],"part":false,"array":false},{"role":"output","name":"Fragment","sample_types":["Fragment"],"object_types":["PCR Stripwell"],"part":true,"array":false}],"protocol":"class Protocol\n\n  def main\n\n    operations.retrieve\n              .make\n    \n    t = operations.start_table\n          .input_item(\"Forward Primer\")\n          .input_item(\"Reverse Primer\")\n          .custom_column(heading: \"Template Concentration (uL)\") { |op| \n            op.input_data(\"Template\",\"concentration\") || 5.0\n          }\n          .custom_column(heading: \"Master Mix (uL)\") { |op| 50 }\n          .output_collection(\"Fragment\")\n          .output_row(\"Fragment\")\n          .output_column(\"Fragment\")\n          .end_table\n          \n    show do\n      title \"Protocol Table\"\n      table t.all.render\n    end\n    \n    operations.store(io: \"input\")\n              .store(io: \"output\")    \n    \n    return {}\n    \n  end\n\nend","cost_model":"# PCR Cost Model\n\ndef cost(op)\n  if op.status == 'error'\n    { labor: 0, materials: 0 }\n  else\n    { labor: 1, materials: 1 }\n  end\nend","documentation":"PCR\n===\n\nDocumentation here"}