{"name":"Overnight from Plate","category":"Cloning","deployed":false,"on_the_fly":false,"field_types":[{"role":"input","name":"Plate","sample_types":["Plasmid"],"object_types":["E coli Plate of Plasmid"],"part":false,"array":false},{"role":"output","name":"Overnight","sample_types":["Plasmid"],"object_types":["TB Overnight of Plasmid"],"part":false,"array":false}],"protocol":"class Protocol\n\n  def main\n      \n    # May want to retrieve silently and tell technician only to get plates for running operations\n    # after error checking.\n    operations.retrieve(interactive: false)\n    \n    # Increase the number of colonies picked the plate. If no picked number is present,\n    # set it equal to one. Note that setting the status to \"error\" will remove the operation\n    # from operations.running, so it will not be listed in tables, etc.\n    operations.each do |op|\n       nc = op.input_data \"Plate\", :num_colonies\n       np = op.input_data \"Plate\", :num_picked\n       if debug && !nc && rand(2) == 1\n          op.set_input_data \"Plate\", :num_colonies, 1\n          op.set_input_data \"Plate\", :num_picked, 1\n       elsif !nc || nc == 0 || ( np && np >= nc )\n           op.set_status \"error\"\n           op.associate :missing_data, \"No colonies left on plate or colony number not defined\"\n       else\n           op.set_input_data \"Plate\", :num_picked, np+1\n       end\n    end\n    \n    # Error out operations whose samples don't have bacterial marker data. Tell technician\n    # which ones are not being used. Quit if there are no samples left.\n    operations.running.each do |op|\n        unless op.input(\"Plate\").child_sample.properties[\"Bacterial Marker\"]\n            if debug && rand(2) == 1\n              op.input(\"Plate\").child_sample.set_property \"Bacterial Marker\", \"Amp\"\n            else\n              op.set_status \"error\"\n              op.associate :missing_marker, \"No bacterial marker associated with plasmid\"\n            end\n        end\n    end\n    \n    # Note: Retrieve again, since it was not interactive before error checking\n    operations.retrieve.make\n    \n    # Associate plate id with from data for overnight.\n    operations.running.each do |op|\n        op.set_output_data \"Overnight\", :from, op.input(\"Plate\").child_item.id\n    end\n\n    show do\n        title \"Label and load overnight tubes\"\n        note \"In the Media Bay, collect #{operations.running.length} 14mL tubes\"\n        note \"Write the overnight id on the corresponding tube and load with the correct media type.\"\n        table operations.start_table\n          .input_item(\"Overnight\", checkable: true)\n          .custom_column(heading: \"Media\") { |op| \"TB+\" + op.input(\"Plate\").child_sample.properties[\"Bacterial Marker\"] }\n          .custom_column(heading: \"Quantity\") { |op| \"3 mL\" }\n          .end_table\n    end\n\n    show {\n        title \"Inoculation from plate\"\n        note \"Use 10 ÂµL sterile tips to inoculate colonies from plate into 14 mL tubes according to the following table.\"\n        check \"Mark each colony on the plate with corresponding overnight id. If the same plate id appears more than once in the table, inoculate different isolated colonies on that plate.\"\n        table operations.start_table\n          .input_item(\"Plate\", checkable: true)\n          .input_item(\"Overnight\")\n          .end_table      \n    }    \n    \n    operations.running.each do |op|\n        op.output(\"Overnight\").child_item.move \"37 C shaker incubator\"\n    end\n    \n    operations.store\n    \n    return {}\n\n  end \n  \nend ","cost_model":"def cost(op)\n  { labor: 0, materials: 0 }\nend","documentation":"New Operation Type\n===\n\nDocumentation here"}