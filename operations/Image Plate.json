{"name":"Image Plate","category":"Cloning","deployed":false,"on_the_fly":false,"field_types":[{"role":"input","name":"Plate","sample_types":["Plasmid","Yeast Strain"],"object_types":["E coli Plate of Plasmid","Yeast Plate"],"part":false,"array":false}],"protocol":"# Author: Ayesha Saleem\n# November 4, 2016\n\nclass Protocol\n\n  def main\n    # Take plates  \n        operations.retrieve\n        \n    # Count the number of colonies and select whether the growth is normal, contaminated, or a lawn\n        show do \n            operations.each do |op|\n                plate = op.input(\"Plate\").item.id\n                get \"number\", var: \"#{plate}\", label: \"Estimate how many colonies are on plate #{plate}\", default: 5\n                select [\"normal, contamination, lawn\"], var: \"#{plate}_status\", label: \"Choose whether there is contamination, a lawn, or whether it's normal.\"\n            end\n        end\n        \n        to_delete = Array.new\n    # Alter data of the actual item\n        operations.each do |op|\n            item = op.input(\"Plate\").item\n            if op.temporary[\"#{item.id}\"] != 0\n                op.set_input_data \"Plate\", :num_colony, op.temporary[\"#{item.id}\"]\n                op.set_input_data \"Plate\", :status, op.temporary[\"#{item.id}\"]\n                item.store\n                item.reload\n            else \n                item.mark_as_deleted\n                to_delete << item.id\n            end\n                \n        end       \n    \n    # Delete and discard any plates that have 0 colonies\n        show do \n            title \"Discard Plates\"\n            note \"Discard the following plates: #{to_delete}\"\n        end\n    \n    # Parafilm \n        show do \n            title \"Label and Parafilm\"\n            note \"Label the plates with their item ID numbers on the side, and parafilm each one.\"\n            note \"Labelling the plates on the side makes it easier to retrieve them from the fridge.\"\n        end\n            \n    # Return plates \n        operations.store\n    \n    return {}\n    \n  end\n\nend\n","cost_model":"def cost(op)\n  { labor: 0, materials: 0 }\nend","documentation":"New Operation Type\n===\n\nDocumentation here"}